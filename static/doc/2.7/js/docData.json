{"version":{"name":"Senro.2.7.js","url":"http://senro.cn/senro/Senro.2.7.js"},"require":{"name":"jquery 1.9.1","url":"http://static.woniu.com/script/jquery/jquery-1.9.1.min.js"},"author":{"name":"senro","url":"http://senro.cn"},"copyRight":{"name":"senro.cn","url":"http://senro.cn"},"thanks":[{"name":"NightKnight","url":"#"},{"name":"蒹葭从风","url":"#"},{"name":"woniu.com","url":"http://www.woniu.com"}],"introduction":["Senro.2.7.js 是senro根据日常工作的需求开发的经验总结，目的是快速应对各种蜗牛前端开发中需要用到的常用js方法和组件，\r\n ","       可以把这个对象想象成senro本人，它有自己的属性、方法。开发原则是尽量用一句话解决一个问题当然，尽量减少传参，参数按重要\r\n ","       级别从左往右。由于水平有限，难免会有bug，和不完善，还请需要使用的各位，多多包涵，并指出不足，以便完善"],"contains":{"core":{"contains":{"checkRequire":{"location":"核心公用方法","translate":"检测依赖（ 检测类型 ，回调）","parameters":["checkRequire( type, fun_action )\r\n         ","         type（字符串）：【必填】'video','swf','login','iePng','drag','mouseWheel','MSClass'，'animateColors','cssSandpaper','tweenMax','testHtml5','preload'\r\n         ","         fun_action（函数）： 【必填】自定义"],"function":"根据所传的依赖类型自动获取，所需依赖文件。并保证当该方法被多次调用时，引用文件只被加载一次。","return":"无","example":"/test-html/2.7/test-checkRequire.html","need":"无","description":"暂无"},"console":{"location":"核心公用方法","translate":"输出（ 值 ）","parameters":["console( str )\r\n         ","         str任意值【必填】"],"function":"针对ie不支持console做兼容，保证ie使用console不报错","return":"无","example":"/test-html/2.7/test-console.html","need":"无","description":"暂无"},"len":{"location":"核心公用方法","translate":"字符串长度（ 字符串 ）","parameters":["len( s )\r\n         ","         s任意字符串【必填】"],"function":"英文字符算一个，中文字符算两个长度","return":"长度（int）","example":"/test-html/2.7/test-len.html","need":"无","description":"暂无"},"random":{"location":"核心公用方法","translate":"随机区间（ 开始数，结束数 ）","parameters":["random( min, max )\r\n         ","         min，max为数字【必填】"],"function":"返回在min到max区间的随机数，返回值包括min，不包括max","return":"随机数（int）","example":"/test-html/2.7/test-random.html","need":"无","description":"暂无"},"isIE6":{"location":"核心公用方法","translate":"是否是ie6（ ）","parameters":"isIE6()","function":"检测是否是ie6","return":"true或false（boolean）","example":"/test-html/2.7/test-isIE6.html","need":"无","description":"暂无"},"addScript":{"location":"核心公用方法","translate":"加script标签（ 自定义属性对象，要插入的dom位置 ）","parameters":["addScript( cus_attrs, $domPos )\r\n         ","         cus_attrs(对象)：【必填】标签包含的属性对象，例如{src:'',gameId:''}\r\n         ","         $domPos（$）: 【可选】用jquery选中的父节点，默认head里"],"function":"向指定父元素插入带定义属性的script标签","return":"无","example":"/test-html/2.7/test-addScript.html","need":"无","description":"暂无 todo"}},"translate":"核心公用方法"},"widget":{"contains":{"sliderTab":{"location":"常用组件","translate":"tab切换（ 所有tab按钮，所有tab内容，按钮current样式，触发类型，切换类型，初始current索引 ）","parameters":["sliderTab( $btns, $conts, btn_hover, trigerType, transType, currIndex )\r\n         ","         $btns：【必填】jquery选中的所有tab按钮\r\n         ","         $conts：【必填】jquery选中的所有tab内容框\r\n         ","         btn_hover（字符串）：【必填】current类名\r\n         ","         trigerType（字符串）：【可选】触发类型包括jquery的事件类型，如‘click’，‘mouseover’，默认mouseover\r\n         ","         transType（字符串）：【可选】切换类型有，‘normal’，‘fade’，默认normal\r\n         ","         currIndex（数字）：【可选】初始current的索引值，以0开始，默认0"],"function":"tab切换，根据传参，初始化tab组件","return":"无","example":"/test-html/2.7/test-sliderTab.html","need":"无","description":"暂无"},"bigEye":{"location":"常用组件","translate":"大眼睛轮播图片（ 容器id，图片包裹层id，导航dot包裹层的id，触发dot的类型 ）","parameters":["bigEye(containerId,itemsWrapId,dotsWrapId,dotAction)\r\n         ","         containerId（字符串）：【必填】容器id\r\n         ","         itemsWrapId（字符串）：【必填】图片包裹层id\r\n         ","         dotsWrapId（字符串）：【必填】导航dot包裹层的id\r\n         ","         dotAction（字符串）：【可选】触发dot的类型，‘mouseover’，‘click’，默认click"],"function":"初始化大眼睛轮播图片组件","return":"无","example":"/test-html/2.7/test-bigEye.html","need":"checkRequire","description":"暂无 todo 待重写"},"marquee":{"location":"常用组件","translate":"滚动（ 容器id，滚动方向，上一个按钮，下一个按钮，滚动速度 ）","parameters":["marquee( containerId, direction, $preBtn, $nextBtn, speed )\r\n         ","         containerId（字符串）：【必填】容器id\r\n         ","         direction（字符串）：【必填】滚动方向，‘left’，‘right’，‘top’，‘bottom’\r\n         ","         $preBtn（字符串）：【可选】jquery选中的上一个按钮\r\n         ","         $nextBtn（字符串）：【可选】jquery选中的下一个按钮\r\n         ","         speed（数字）：【可选】滚动速度，默认1"],"function":"箭头控制滚动方向、加速及鼠标拖动实例","return":"无","example":"/test-html/2.7/test-marquee.html","need":"checkRequire","description":["container必须设定宽高，内部获取其宽高作为设置参数,滚动元素最好用表格布局，好像MSClass自动变成表格布局，待研究。\r\n         ","         MSClass是把你要滚动的元素自动再复制到一个td里，所有的滚动都是以表格的形式滚动的，并且在用ul+li布局的时候，ul不\r\n         ","         用设置absolute只要设置li的宽度乘以li的个数就行了，外面的container也不用设relative"]},"simpleSliderLR":{"location":"常用组件","translate":"简单的带箭头图片滚动（ 左按钮，右按钮，图片包裹层，展示图片数量，循环，速度 ）","parameters":["simpleSliderLR($btn_l,$btn_r,$list,showNum,loop,speed)\r\n         ","         $btn_l（$）：【必填】jquery选中的左按钮\r\n         ","         $btn_r（$）：【必填】jquery选中的右按钮\r\n         ","         $list（$）：【必填】jquery选中的图片包裹层\r\n         ","         showNum（数字）：【可选】显示个数，即移动步长，默认1\r\n         ","         loop（布尔）：【可选】是否循环，true，循环，false，不循环，默认false\r\n         ","         speed（数字）：【可选】切换缓动时间，默认200"],"function":"初始化带左右箭头的轮播图片组件","return":"无","example":"/test-html/2.7/test-simpleSliderLR.html","need":"无","description":"注意在初始化时，该$list里的元素不能被隐藏，否则offset会为0"},"sliderLR":{"location":"常用组件","translate":"带缩略图，滚动条的图片滚动（ 大图片包裹层，大图左按钮，大图右按钮，小图包裹层，小图左按钮，小图右按钮，滚动条滑块 ）","parameters":["sliderLR( $list, $btn_l, $btn_r, $thumbList, $thumbBtn_l, $thumbBtn_r,  $sliderCube )\r\n         ","         $list（$）：【必填】jquery选中的图片包裹层\r\n         ","         $btn_l（$）：【可选】jquery选中的大图左按钮\r\n         ","         $btn_r（$）：【可选】jquery选中的大图右按钮\r\n         ","         $thumbList（$）：【可选】jquery选中的小图片包裹层\r\n         ","         $thumbBtn_l（$）：【可选】jquery选中的小图左按钮\r\n         ","         $thumbBtn_r（$）：【可选】jquery选中的小图右按钮\r\n         ","         $sliderCube（$）：【可选】jquery选中的滚动条滑块"],"function":"初始化带缩略图和滚动条的轮播图片组件","return":"无","example":"/test-html/2.7/test-sliderLR.html","need":"checkRequire","description":["todo 该方法还不完善，2.7的基本没有大问题，某些特殊情况可能会出现的点bug但不影响使用\r\n         ","         如果初始状态是隐藏的，建议用visible：hidden隐藏，不然可能里面的position（）获取不到值，导致初始化有错误"]},"carouselSlider":{"location":"常用组件","translate":"环形带箭头图片滚动（ 图片包裹层，左按钮，右按钮 ）","parameters":["carouselSlider( $items, $btnLeft, $btnRight )\r\n         ","         $items（$）：【必填】jquery选中的图片包裹层\r\n         ","         $btnLeft（$）：【必填】jquery选中的左按钮\r\n         ","         $btnRight（$）：【必填】jquery选中的右按钮"],"function":"初始化带缩略图和滚动条的轮播图片组件","return":"无","example":"/test-html/2.7/test-carouselSlider.html","need":"无","description":"todo carouselSlider实现的不太好，需完善"},"scrollBar":{"location":"常用组件","translate":"滚动条（ 选中的滑块，选中的被滚动的内容框，滚动方向，速度 ）","parameters":["scrollBar( $scrollCube, $container, direction, speed )\r\n         ","         $scrollCube（$）：【必填】jquery选中的滑块\r\n         ","         $container（$）：【必填】jquery选中的被滚动的内容框\r\n         ","         direction（$）：【可选】滚动方向，‘h’，水平，默认‘v’垂直\r\n         ","         speed（数字）：【可选】滚动速度，默认10"],"function":"初始化带缩略图和滚动条的轮播图片组件","return":"无","example":"/test-html/2.7/test-scrollBar.html","need":"checkRequire","description":["实现原理，首先利用jquery ui让滚动条可以在父层的限制内滚动，然后根据内容的实际高度与限制最大高度的比决定滑块的高度。\r\n         ","         根据改变高度后的滑块的实时top与滑块父层的最大高度的比去决定内容层移动的比率，此时要同步滚轮计数的值，根据当前的滑块的比率\r\n         ","         去反推滚轮计数的相对位置，将值还原成0到100之间的一个数。滚轮效果就是绑定滚轮事件，让向下滚滚轮计数+1，向上减一，控制其范\r\n         ","         围在0-100，然后让滑块和内容层去按这个滚动计数的百分比去各自方向滚动。"]},"selectWidget":{"location":"常用组件","translate":"模拟select组件（ select的id，下拉图标的类名，下拉菜单中已选项的类名，下拉最多显示个数 ）","parameters":["selectWidget( id, iconClass, optionSelectedClass, maxNum)\r\n         ","         id（字符串）：【必填】原select的id\r\n         ","         iconClass（字符串）：【可选】下拉图标的类名，默认是id+‘-icon’\r\n         ","         optionSelectedClass（字符串）：【可选】已选的option类名，默认是senroOption_hover\r\n         ","         maxNum（数字）：【可选】下拉菜单最多显示的个数，默认无限"],"function":["让原生的select支持自定义css，只需按正常的方式定义结构和样式即可,如果想改变滚动条的样式，\r\n         ","         给select的data-scrollCube（滚动滑块）和data-scrollLine（滚动条背景）传其类名，支持\r\n         ","         最多显示个数，并自带滚动条，并且模拟发送变量自动增加两个隐藏的input发送变量，并将name和value，\r\n         ","         支持选项链接跳转，给option传入data-url和data-target就行，data-url默认不跳转，data-target\r\n         ","         默认本页跳转\r\n         ","         储存在select的data-name和data-value里"],"return":"无","example":"/test-html/2.7/test-selectWidget.html","need":["checkRequire","scrollBar"],"description":["selectWidget组件需要引入senro.css\r\n         ","         todo selectWidget需要完善显示检测"]},"cssTriangle":{"location":"常用组件","translate":"css三角（ 需要加样式的dom，三角方向，三角宽度，三角颜色 ）","parameters":["cssTriangle( $dom, direction, width, color )\r\n         ","         $dom（字符串）：【必填】jquery选中的需要变成三角的dom\r\n         ","         direction（字符串）：【必填】三角方向，‘up’，‘right’，‘down’，’left‘\r\n         ","         width（字符串）：【必填】宽度带px单位，如‘2px’\r\n         ","         color（字符串）：【必填】16进制颜色，如‘#000000’"],"function":"快速定义css模拟的三角，方向可选","return":"无","example":"/test-html/2.7/test-cssTriangle.html","need":"isIE6","description":"无"}},"translate":"常用组件"},"UIInteractive":{"contains":{"controlPop":{"location":"常用界面交互方法","translate":"控制弹窗（ 类型，弹框主体，关闭按钮，遮罩层 ）","parameters":["controlPop(type,$pop,$close,$mask)\r\n         ","         type（字符串）：【必填】‘show’，显示，‘hide’，隐藏\r\n         ","         $pop（$）：【必填】jquery选中的弹框主体\r\n         ","         $close（$）：【可选】jquery选中的关闭按钮\r\n         ","         $mask（$）：【可选】jquery选中的自定义遮罩层，默认是黑色，透明度0.6"],"function":"显示或隐藏弹窗，自带遮罩，根据窗口大小自动居中","return":"无","example":"/test-html/2.7/test-controlPop.html","need":"无","description":"如果弹框主体里有表单重置表单"},"addVideo":{"location":"常用界面交互方法","translate":"添加视频（ id，视频路径，截图路径，宽度，高度，回调 ）","parameters":["addVideo(id,file,image,width,height,callback)\r\n         ","         id（字符串）：【必填】视频dom容器id\r\n         ","         file（字符串）：【必填】格式为flv的视频文件路径\r\n         ","         image（字符串）：【必填】视频截图路径\r\n         ","         width（数字）：【必填】视频宽度，默认单位px\r\n         ","         height（数字）：【必填】视频高度\r\n         ","         callback（函数）：【可选】视频初始化完成后的回调函数，返回参数jwplayer对象，可以用来控制播放等"],"function":"快速初始化视频，可以调用多次，并用回调传回控制对象","return":"无","example":"/test-html/2.7/test-addxxx.html","need":"checkRequire","description":"路径相对于页面地址。回调返回的video有play()"},"addSwf":{"location":"常用界面交互方法","translate":"加载flash（ id，swf文件路径，宽度，高度，回调 ）","parameters":["addSwf(id,file,width,height,callback)\r\n         ","         id（字符串）：【必填】flash dom容器id\r\n         ","         file（字符串）：【必填】swf文件路径\r\n         ","         width（数字）：【必填】swf宽度，默认单位px\r\n         ","         height（数字）：【必填】swf高度\r\n         ","         callback（函数）：【可选】暂不支持回调，待改进"],"function":"快速初始化flash，可以调用多次","return":"无","example":"/test-html/2.7/test-addxxx.html","need":"checkRequire","description":["封装了下swfobject.embedSWF(\"circle.swf?\"+new Date().getTime()+Math.random(), 'circle', 605, 605,\r\n         ","         9,null,null,{wmode: 'transparent'})，\r\n         ","         todo，回调返回swf对象"]},"addNavFooter":{"location":"常用界面交互方法","translate":"加载页头页尾（ 游戏名字）","parameters":["addNavFooter(gamename)\r\n         ","         gamename（字符串）：【必填】游戏名字"],"function":"快速加载蜗牛公司的通用页头、页尾","return":"无","example":"/test-html/2.7/test-addxxx.html","need":"addScript","description":"todo，ie6下，布局有相对定位问题"},"addShare":{"location":"常用界面交互方法","translate":"加载分享（ 分享的容器dom，主程序js的id）","parameters":["addShare($dom,mainJsId)\r\n         ","         $dom（$）：【必填】jquery选中的分享的dom容器\r\n         ","         mainJsId（字符串）：【可选】自定义主js的id"],"function":"快速加常见分享","return":"无","example":"/test-html/2.7/test-addShare.html","need":"addScript","description":["因为可能会有动态修改分享内容的需求，所以加了第二个参数，保证自定义的分享内容有效\r\n         ","         todo，ie6下，布局有相对定位问题"]},"changeFont":{"location":"常用界面交互方法","translate":"改变字体大小（ 文字所在dom，大字体按钮，中字体按钮，小字体按钮）","parameters":["changeFont( $chgCont, $big, $normal, $small)\r\n         ","         $chgCont（$）：【必填】jquery选中的文字所在dom\r\n         ","         $big（$）：【必填】jquery选中的大字体按钮\r\n         ","         $normal（$）：【必填】jquery选中的中字体按钮\r\n         ","         $small（$）：【必填】jquery选中的小字体按钮"],"function":"快速初始化改变字体大小按钮","return":"无","example":"/test-html/2.7/test-addShare.html","need":"无","description":"todo 考虑存在的必要性"},"backTop":{"location":"常用界面交互方法","translate":"返回顶部（ 返回顶部按钮 ）","parameters":["backTop( $btn )\r\n         ","         $btn（$）：【必填】jquery选中的返回顶部按钮"],"function":"快速初始化返回顶部按钮","return":"无","example":"/test-html/2.7/test-backTop.html","need":"isIE6","description":"无"},"addCurrent":{"location":"常用界面交互方法","translate":"加current（ 需要加的按钮，current类名 ）","parameters":["addCurrent( $btns, currName )\r\n         ","         $btn（$）：【必填】jquery选中的需要加current按钮\r\n         ","         currName（$）：【必填】current类名"],"function":"根据文件名后面的数字给相应的按钮添加current类，主要是针对cms2的二级页","return":"无","example":"/test-html/2.7/test-addCurrent1.html","need":"无","description":"依赖页面文件名字后面的数字，1为第一个的意思，从1开始计数，如：sec1.html"}},"translate":"常用界面交互方法"},"dataInteractive":{"contains":{"checkLogin":{"location":"常用后端交互方法","translate":"检测登录（ 已登录函数，未登录函数 ）","parameters":["checkLogin( logined, notLogin )\r\n         ","         logined（函数）：【必填】已登录函数，可以通过返回的参数data.passport_username获取用户名\r\n         ","         notLogin（函数）：【可选】未登录函数"],"function":"检测登录状态","return":"无","example":"/test-html/2.7/test-checkLogin.html","need":"无","description":["封装的http://gwpassport.woniu.com/v2/islogin接口，\r\n         ","         接口文档 ，\r\n         ","         1020  已登录，\r\n         ","         1021  未登录，\r\n         "," \t       JSON，\r\n         ","         {'msgcode': msgcode, 'tips': tips, 'passport_username': passport_username,\r\n         ","         'server_version': server_version, 'server_time': server_time,\r\n         ","         'server_environment': environment, 'server_node': server_node, }"]},"loginOut":{"location":"常用后端交互方法","translate":"注销（ 注销按钮 ）","parameters":["loginOut($a)\r\n         ","         $a（$）：【必填】注销按钮"],"function":"给注销按钮添加注销链接","return":"无","example":"/test-html/2.7/test-loginOut.html","need":"无","description":"按钮必须为a标签"},"getJson":{"location":"常用后端交互方法","translate":"带参数获取json（ 接口地址，参数对象，回调函数 ）","parameters":["getJson( url, argus, callback)\r\n         ","         url（字符串）：【必填】接口地址\r\n         ","         argus（对象）：【可选】参数对象\r\n         ","         callback（函数）：【必填】回调函数"],"function":"给注销按钮添加注销链接","return":"无","example":"/test-html/2.7/test-getJson.html","need":"无","description":["argus 参数示例\r\n         ","         var argus={\r\n         ","              argu1: argu1Value,\r\n         ","              argu2: argu2Value\r\n         ","            }"]},"initLogin":{"location":"常用后端交互方法","translate":"初始化登录框（ 表单id，input包裹层类名，登录成功回调函数 ）","parameters":["initLogin(formId,scope,successCallback)\r\n         ","         formId（字符串）：【必填】登录表单id\r\n         ","         scope（字符串）：【必填】input包裹层类名\r\n         ","         successCallback（函数）：【必填】登录成功回调函数"],"function":"给注销按钮添加注销链接","return":"无","example":"/test-html/2.7/test-initLogin.html","need":"checkRequire","description":["todo，尽量减少传参，让方法通过formid自己去加后面的参数，要不然使用起来太复杂,待测试\r\n         ","         参数\r\n         ","         username \t    必选 \t用户名\r\n         ","         password \t    必选 \t密码\r\n         ","         jumpurl \t        可选 \t跳转路径\r\n         ","         jsoncallback \t可选 \tJSON回调函数\r\n         ","         返回码\r\n         ","         1002 \t登录成功\r\n         ","         2002 \t通行证账号密码错误\r\n         ","         登录成功\r\n         ","         JSON\r\n         ","         {'msgcode': code, 'tips': tip, 'server_version': server_version,\r\n         ","         'server_time': server_time, 'server_environment': environment,\r\n         ","         'server_node': server_node,'account': account, 'realName': realName,\r\n         ","         'createDate': createDate, 'jumpurl': jumpurl}"]},"placeHolderInput":{"location":"常用后端交互方法","translate":"模拟input的placeholder（ 需要模拟的input，提交按钮 ）","parameters":["placeHolderInput( $inputs, $submit )\r\n         ","         $inputs（$）：【必填】jquery选中的需要模拟placeholder的inputs\r\n         ","         $submit（$）：【必填】jquery选中的提交按钮"],"function":"根据传入的input的value模拟placeholder效果，并且给提交按钮添加检测，如果input的值没有改变或为空，就阻止提交事件","return":"无","example":"/test-html/2.7/test-placeHolderInput.html","need":"无","description":"无"},"toggleInput":{"location":"常用后端交互方法","translate":"带提示的input（ 正常输入input，提示框input ）","parameters":["toggleInput( $normalInput, $msgInput )\r\n         ","         $normalInput（$）：【必填】jquery选中的正常输入框\r\n         ","         $msgInput（$）：【必填】jquery选中的提示输入框"],"function":"快速初始化带提示的输入框","return":"无","example":"/test-html/2.7/test-toggleInput.html","need":"无","description":"暂无"}},"translate":"常用后端交互方法"},"check":{"contains":{"checkInput":{"location":"常用检测方法","translate":"表单验证（ 表单，检测通过后的回调，提示框的类名 ）","parameters":["checkInput( $form, callback, msgsClassName )\r\n         ","         $form（$）：【必填】jquery选中的需要验证的表单\r\n         ","         callback（函数）：【可选】检测全部通过后的回调函数\r\n         ","         msgsClassName（字符串）：【可选】提示框的类名，默认：msg"],"function":"表单验证，可以检测的类型：require、email、cellPhone、chinaID、password，只需在输入框的类上加上相应的类型即可","return":"无","example":"/test-html/2.7/test-checkInput.html","need":"无","description":["todo checkbox，默认的参数需要防止命名重复\r\n         ","         其中msg不一定是input，可以是其他类型元素，至于选择标记符和提示框标记符可以通过修改对象的值修改，\r\n         ","         如：senro.checkInput.email.selecter=\"email1\"\r\n         ","         实现原理：给此对象定义几个要检测的属性对象，他们每个对象包含它的选择符，提示框选择符，提示语言，检验状态，检测对象数组，提示\r\n         ","         框数组，方法当有输入框焦点移入时，开始执行收集所有要检测的输入框和提示框，并且存到指定的属性对象里，检验动作其实就两个状态需\r\n         ","         要检测，并且每个输入框的动作是一样的，都是点击输入框时其对应的提示框消失，当焦点移出时，用改属性对象的方法检测该输入框的值，\r\n         ","         并将其值保存在state属性数组里，如果state不正确，将错误信息放到提示框并显示出来，然后给显示出来的提示框加个点击操作，点击该\r\n         ","         提示框，让其消失，并把焦点移入其对应的输入框\r\n         ","         待改进的地方：\r\n         ","         如果第一次正确完成后，正常执行了回调函数，但是如果用户又去修改了某个值，并且该值不符合要求，但是此时因为之前已经执行过了回调，\r\n         ","         如果回调函数里是对submit按钮进行提交绑定，此时虽然信息填写错误，方法是不会去执行回调，但是之前已经绑定了，所以点submit按钮\r\n         ","         也能提交，所以应该考虑给回调函数里返回一个当前状态，或者设置两个回调函数（成功或失败）分别调用。"]},"checkHtml5":{"location":"常用检测方法","translate":"检测浏览器html5支持程度（ 类型，支持该的回调，不支持的回调 ）","parameters":["checkHtml5(type,support_callback,notSupport_callback)\r\n         ","         type（字符串）：【必填】检测浏览器是否支持的类型，webgl, canvas, audio, video, csstransforms3d\r\n         ","         support_callback（函数）：【可选】注销按钮\r\n         ","         notSupport_callback（函数）：【可选】注销按钮"],"function":"检测浏览器的html5属性支持程度","return":"无","example":"/test-html/2.7/test-checkHtml5.html","need":"checkRequire","description":"todo 多类型同时检测"}},"translate":"常用检测方法"},"fix":{"contains":{"fixedDomPos":{"location":"常用修复方法","translate":"模拟fixed属性（ 需要模拟的dom ）","parameters":["fixedDomPos($dom)\r\n         ","         $dom（$）：【必填】jquery选中的需要模拟的dom"],"function":"ie6下模拟dom的fixed属性","return":"无","example":"/test-html/2.7/test-fixedDomPos.html","need":"isIE6","description":"todo 检测机制有问题，需要测试"},"fixIE6Png":{"location":"常用修复方法","translate":"修复ie6的png（ 需要修复的dom类名 ）","parameters":["fixIE6Png(className)\r\n         ","         className（字符串）：【必填】需要修复的dom类名"],"function":"修复ie6的png问题","return":"无","example":"/test-html/2.7/test-fixIE6Png.html","need":"checkRequire","description":["该修复可能导致的问题：\r\n         ","         1.被修复的dom在ie6下动态加的类的样式不能及时呈现\r\n         ","         2.有hover状态的background-position移动会很卡\r\n         ","         封装了\r\n         ","         \"<!--[if IE 6]>\r\n         ","             <script src=\"http://static.woniu.com/script/iepng/iepng.js\"></script>\r\n         ","             <script type=\"text/javascript\">DD_belatedPNG.fix('.iePng')"]}},"translate":"常用修复方法"},"load":{"contains":{"load":{"location":"资源加载","translate":"加载（ 资源路径数组，单个文件加载完后的回调，整体进度回调，全部加载完成回调 ）","parameters":["load(paths,fileLoad,Progress,onComplete)\r\n         ","         paths（数组）：【必填】资源路径数组\r\n         ","         fileLoad（函数）：【可选】单个文件加载完后的回调，可以根据返回参数event.item.ext获取加载文件的后缀名\r\n         ","         Progress（函数）：【可选】整体进度回调，其中返回的参数是0-100的数字\r\n         ","         onComplete（函数）：【可选】全部加载完成回调"],"function":"批量加载资源，支持多类型，可控制进度","return":"无","example":"/test-html/2.7/test-load.html","need":["checkRequire","addScript"],"description":["ie6 只支持图片加载\r\n         ","        需要服务测试，不然会报错！现代浏览器支持加载很多格式：图片，音频,json,xml。ie只支持图片和js加载\r\n         ","        其中progress返回的是0-100的数字"]}},"translate":"资源加载"},"html5":{"contains":{"tweenColor":{"location":"常用js模拟html5效果方法","translate":"缓动颜色（ 被缓动的dom，缓动属性，时间 ）","parameters":["tweenColor( $dom, attr, time )\r\n         ","         $dom（$）：【必填】jquery选中的被缓动的dom\r\n         ","         attr（对象）：【可选】缓动的属性\r\n         ","         time（数字）：【可选】缓动时间"],"function":"缓动颜色","return":"无","example":"/test-html/2.7/test-tweenColor.html","need":"checkRequire","description":"无"},"addGradient":{"location":"常用js模拟html5效果方法","translate":"添加渐变（ 要添加渐变的dom，渐变值 ）","parameters":["addGradient( $dom, str_config )\r\n         ","         $dom（$）：【必填】jquery选中的要加渐变的dom\r\n         ","         config（字符串）：【必填】渐变值"],"function":"给dom添加渐变","return":"无","example":"/test-html/2.7/test-addGradient.html","need":"checkRequire","description":["建议用http://www.colorzilla.com/gradient-editor/生成想要的渐变效果\r\n         ","         然后拷贝其-webkit-gradient属性里的值当作第二个参数，这样最方便调试和使用"]},"css3Rotate":{"location":"常用js模拟html5效果方法","translate":"css3旋转（ 要旋转的dom，旋转角度 ）","parameters":["css3Rotate( $dom, deg )\r\n         ","         $dom（$）：【必填】jquery选中的要旋转的dom\r\n         ","         deg（数字）：【必填】旋转角度，不用带单位"],"function":"js旋转dom，兼容ie6","return":"无","example":"/test-html/2.7/test-css3Rotate.html","need":"checkRequire","description":"todo 多属性同时调用的覆盖问题"},"css3Translate":{"location":"常用js模拟html5效果方法","translate":"css3移动（ 被移动的dom，x方向的距离，y方向的距离 ）","parameters":["css3Translate( $dom, x, y )\r\n         ","         $dom（$）：【必填】jquery选中的要加移动的dom\r\n         ","         x（数字）：【必填】x轴的移动距离，不用带单位，默认px\r\n         ","         y（数字）：【必填】y轴的移动距离，不用带单位，默认px"],"function":"js移动dom，模拟css3的Translate，兼容ie6","return":"无","example":"/test-html/2.7/test-css3Translate.html","need":"checkRequire","description":"todo 多属性同时调用的覆盖问题"},"css3Scale":{"location":"常用js模拟html5效果方法","translate":"css3缩放（ 被缩放的dom，x方向的比例，y方向的比例 ）","parameters":["css3Scale( $dom, x, y )\r\n         ","         $dom（$）：【必填】jquery选中的要加移动的dom\r\n         ","         x（数字）：【必填】x轴的比例，大于0整数，不用带单位\r\n         ","         y（数字）：【必填】y轴的比例，大于0整数，不用带单位"],"function":"js模拟css3的Scale，缩放dom大小，兼容ie6","return":"无","example":"/test-html/2.7/test-css3Scale.html","need":"checkRequire","description":"todo 多属性同时调用的覆盖问题"},"css3Skew":{"location":"常用js模拟html5效果方法","translate":"css3扭曲（ 被扭曲的dom，x方向的比例，y方向的比例 ）","parameters":["css3Skew( $dom, x, y )\r\n         ","         $dom（$）：【必填】jquery选中的要扭曲的dom\r\n         ","         x（数字）：【必填】x轴的比例，大于0整数，不用带单位，默认deg\r\n         ","         y（数字）：【必填】y轴的比例，大于0整数，不用带单位，默认deg"],"function":"js模拟css3的Skew，扭曲dom，兼容ie6","return":"无","example":"/test-html/2.7/test-css3Skew.html","need":"checkRequire","description":"todo 多属性同时调用的覆盖问题"},"css3SetOpacity":{"location":"常用js模拟html5效果方法","translate":"css3透明度（ 要改变透明度的dom，透明值 ）","parameters":["css3SetOpacity( $dom, n )\r\n         ","         $dom（$）：【必填】jquery选中的要加移动的dom\r\n         ","         n（数字）：【必填】透明度，0-1，不用带单位"],"function":"js模拟css3的Opacity，兼容ie6","return":"无","example":"/test-html/2.7/test-css3SetOpacity.html","need":"checkRequire","description":"todo 多属性同时调用的覆盖问题"},"css3SetTransform":{"location":"常用js模拟html5效果方法","translate":"css3变形（ 被变形的dom，变形参数 ）","parameters":["css3SetTransform( $dom, config )\r\n         ","         $dom（$）：【必填】jquery选中的要变形的dom\r\n         ","         config（字符串）：【必填】多属性，比如：\"rotate(\"+p.r+\"deg) translate(\"+p.px+\"px,\"+p.py+\"px\"+\") scale(\"+p.sx+\", \"+p.sy+\") skew(\"+0+\"deg, \"+0+\"deg)"],"function":"js模拟css3的Transform，兼容ie6","return":"无","example":"/test-html/2.7/test-css3SetTransform.html","need":"checkRequire","description":["具体原理参考： google cssSandpaper\r\n         ","         todo 多属性同时调用的覆盖问题"]}},"translate":"常用js模拟html5效果方法"},"animate":{"contains":{"directionAnimate":{"location":"常用动画方法","translate":"遮罩方向动画（ 容器，遮罩 ）","parameters":["directionAnimate( $container, $mask )\r\n         ","         $container（$）：【必填】jquery选中的容器\r\n         ","         $mask（$）：【必填】jquery选中的遮罩"],"function":"让遮罩进入容器时是根据鼠标的方向进入","return":"无","example":"/test-html/2.7/test-directionAnimate.html","need":"无","description":"无"},"tween":{"location":"常用动画方法","translate":"缓动（ 缓动前对象，缓动时间，缓动后对象 ，延迟时间，缓动类型，缓动进行时的触发函数，缓动进行时传的数组，缓动完成时的触发函数，缓动完成时的参数数组，返回缓动对象的回调 ）","parameters":["tween( obj, time, tweenObj, delay, easeType, onUpdate, onUpdateParams, onComplete, onCompleteParams, callback )\r\n         ","         obj（对象）：【必填】缓动前对象\r\n         ","         time（数字）：【必填】缓动时间，默认单位秒\r\n         ","         tweenObj（对象）：【必填】缓动后对象\r\n         ","         delay（数字）：【可选】延迟时间，默认单位秒\r\n         ","         easeType（字符串）：【可选】缓动类型，\r\n         ","         onUpdate（函数）：【可选】缓动进行时的触发函数\r\n         ","         onUpdateParams（数组）：【可选】缓动进行时传的数组\r\n         ","         onComplete（函数）：【可选】缓动完成时的触发函数\r\n         ","         onCompleteParams（数组）：【可选】缓动完成时的参数数组\r\n         ","         callback（函数）：【可选】返回缓动对象的回调"],"function":"缓动对象属性","return":"无","example":"/test-html/2.7/test-tween.html","need":"checkRequire","description":"todo 待优化"}},"translate":"常用动画方法"}}}